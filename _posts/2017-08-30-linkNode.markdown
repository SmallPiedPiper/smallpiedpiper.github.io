---
layout:       post
title:        "链表的形成"
subtitle:     "链表的形成"
date:         2018-08-30 20:00:00
author:       "严冬"
header-mask:  0.3
catalog:      true
multilingual: true
tags:
    - 剑指offer
    - Java
    - 刷题
---

**链表的形成**

  定义：链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。
  链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。
  每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 
  相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，
  比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，
  而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。
	

```
package com.zyd.test;

public class ListNode {

	int val;
	ListNode next = null;
	public ListNode(int val){
		this.val = val;

	}
}
# 形成链表
public static ListNode BuildListNode (int[] input){
		ListNode first = null,last = null,listnode;
		for(int i=0;i<input.length;i++){
			listnode=new ListNode(input[i]);
			listnode.next=null;
			if(input.length>0)
			{
				if(first==null){
					first=listnode;
					last=listnode;
				}
				else {
					last.next=listnode;
					last=listnode;
				}
				
			}
		}
		
		return first;
		
	}

```

